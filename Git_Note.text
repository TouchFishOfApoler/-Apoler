如果git init初始化错了地方，可以在该初始化目录下使用rm -rf .git删除“.git”文件即可。


Git的基本组成框架：
Workspace:开发者工作区
Index/Stage:暂存区/缓存区
Repository:仓库区（或本地仓库）
Remote:远程仓库



常用Git的指令流程

配置git的账号信息：
git config --global user.name '名字'
git config --global user.email 'email'
git config --list    ————    查看git账户信息

git初始化：
git init 初始化
git add 需添加到缓存区的文件 
git commit -m '备注/注释'   ————将缓存区里的文件提交到本地仓库，并迭代一个版本
git commit --amend  ————重写上一次的提交信息
PS：按“i”插入信息，ctrl+o 保存修改，ctrl+x退出

git log ————查看历史提交日志
git log --pretty=oneline  ————简洁输出历史提交日至
回滚仓库：
git reset --hard 要回滚版本的哈希id
git reset --hard HEAD^   ————会滚到上一次提交的版本
git reset --hard HEAD~3  ————回滚三次

查看当前仓库状态：
git status

git add --all  ————将当前目录下包括子目录下所有改动的文件提交到缓存区，只提交改动的文件！（包括删除操作也会记录进去，然后在本地仓库中执行删除操作）
git add .     ————跟git add -all一样，只不过不记录删除操作

git checkout -- 文件名     ————回退到缓存区里的版本，如果缓存区里没有，则回退到本地仓库的上一次版本

git log 文件名     	   ————查看该文件可回退的版本
git reset 可回退版本哈希id 回退的文件名  	————将指定文件回退到指定版本

删除文件：
可以直接rm 文件名，来删除文件，然后git add和git commit 重新提交一次。
也可以使用git rm 文件名，来删除文件，这样只用git commit一次就行。

查看提交历史：
git reflog




